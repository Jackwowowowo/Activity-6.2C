pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo "Build Automation Tool: Maven"
                echo "The build stage involves compiling and packaging your code using Maven to create an excecutable or deployable artifact"
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Unit and Integration Tool: TestNG"
                echo "The Unit and Integration Test stage involves running automated tests using TestNG to ensure the code functions as expected."
            }
            post {
                success {
                    emailext to: "jackboakes98@gmail.com",
                        subject: "Unit and Integration Test Success",
                        body: "I'm an automated system writing to inform you of the status of the Unit and Integration Test stage for the project.
                        
                        Our automated testing system has detected that the Unit and Integration testing stage completed succesfully.",
                        attachLog: true,
                        mimeType: 'text/plain'
                }
                failure {
                    emailext to: "jackboakes98@gmail.com",
                        subject: "Unit and Integration Test Failure",
                        body: "I'm an automated system writing to inform you of the status of the Unit and Integration Test stage for the project.
                        
                        Our automated testing system has detected that the Unit and Integration testing stage been unsuccesful.",
                        attachLog: true,
                        mimeType: 'text/plain'
                }
        }
        stage('Code Analysis') {
            steps {
                echo "In the Code Analysis stage SonarQube is integrated to analyze the code and ensure it meets industry standards for code quality and maintainability."
                echo "Code Analysis Tool: SonarQube"
            }
        }  
        stage('Security Scan') {
            steps {
                echo "The security Scan stage involves running a security scan on the code using OWASP ZAP to identify any vulnerabilities."
                echo "Security Scan Tool: OWASP ZAP"
            }
            post {
                success {
                    emailext to: "jackboakes98@gmail.com",
                        subject: "Security Scan Success",
                        body: "The Security Scan stage of ${TESTING_ENVIRONMENT} has run successfully",
                        attachLog: true,
                        mimeType: 'text/plain'
                }
                failure {
                    emailext to: "jackboakes98@gmail.com",
                        subject: "Security Scan Failure",
                        body: "The Security Scan stage of ${TESTING_ENVIRONMENT} has failed",
                        attachLog: true,
                        mimeType: 'text/plain'
                }
            }

        }
        stage('Deploy to Staging') {
            steps {
                echo "In the Deploy to Staging stage the application is deployed to a Amazon EC2 environment where it can be tested. "
                echo "Deploy to Staging Tool: Amazon EC2"
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "The integreation Tests on Staging stage is where the automated integration tests are run on the staging enviromnet to ensure the application functions as expected."
                echo "Integration Tests on Staging Tool: Selenium"
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "In the Deploy to Production Stage the application is deployed to a production server (Amazon EC2)"
                echo "Deploy to Production Tool: Amazon EC2"
            }
        }
    }
}
